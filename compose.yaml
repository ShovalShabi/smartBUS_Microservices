# Docker Compose Configuration for PostgreSQL, Redis, and Microservices

version: '3.8'

services:
  # PostgresSQL container (slimmed down)
  PostgresContainer:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12683579
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d

  # Auth service (dev)
  auth-dev:
    build:
      context: ./Auth
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgresContainer:5432/AuthDBDev
    ports:
      - "3804:3804"
    depends_on:
      - PostgresContainer

  # Auth service (prod)
  auth-prod:
    build:
      context: ./Auth
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgresContainer:5432/AuthDBProd
    ports:
      - "10000:10000"
    depends_on:
      - PostgresContainer

  # Feedback service (dev)
  feedback-dev:
    build:
      context: ./Feedback
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgresContainer:5432/FeedbackDBDev
    ports:
      - "5003:5003"
    depends_on:
      - PostgresContainer

  # Feedback service (prod)
  feedback-prod:
    build:
      context: ./Feedback
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgresContainer:5432/FeedbackDBProd
    ports:
      - "10050:10050"
    depends_on:
      - PostgresContainer

  # GTFS service
  gtfs:
    build:
      context: ./GTFS
      dockerfile: Dockerfile
    volumes:
      - ./GTFS/public:/app/GtfsScript/public # Mounting public folder for GTFS data
      - ./GTFS/config.yaml:/app/GtfsScript/config/config.yaml # Provide the config.yaml file
    depends_on:
      - PostgresContainer
    environment:
      - POSTGRES_URL=jdbc:postgresql://PostgresContainer:5432/gtfs
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12683579
    ports:
      - "8000:8000" # Or the port you need to expose for GTFS

  # OrderBus service (dev)
  orderbus-dev:
    build:
      context: ./OrderBus
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgresContainer:5432/gtfs
    ports:
      - "6936:6936"
    depends_on:
      - PostgresContainer
      - gtfs
      - routes-dev
      - RedisContainer

  # OrderBus service (prod)
  orderbus-prod:
    build:
      context: ./OrderBus
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgresContainer:5432/gtfs
    ports:
      - "10093:10093"
    depends_on:
      - PostgresContainer
      - gtfs
      - routes-prod
      - RedisContainer

  # Routes service (dev)
  routes-dev:
    build:
      context: ./Routes
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    ports:
      - "6924:6924"

  # Routes service (prod)
  routes-prod:
    build:
      context: ./Routes
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "10094:10094"

  # Redis container (slimmed down)
  RedisContainer:
    image: redis:7-alpine
    ports:
      - "6379:6379" # Redis default port
    volumes:
      - redis-data:/data

volumes:
  postgres-data:
  redis-data:
