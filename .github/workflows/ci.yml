name: CI for Production Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log Step 1
        run: |
          echo "Step 1: Checkout repository" | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Convert gradlew to Unix format
        run: |
          sudo apt-get update && sudo apt-get install -y dos2unix
          dos2unix ./gradlew
          echo "Converted gradlew to Unix format" | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt

      - name: Set execution permission for gradlew
        run: |
          chmod +x ./gradlew
          echo "Execution permission set for gradlew" | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt

      - name: Run tests for each service
        run: |
          services=("Auth" "Feedback" "GTFS" "OrderBus" "Routes")
          for service in "${services[@]}"; do
            echo "Running tests for $service..." | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
            echo "Current working directory before changing to $service:" | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
            pwd | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
            cd $service
            if [ -d "./src/test/java" ]; then
              echo "Tests found for $service, running tests..." | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
              pwd | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
              ../gradlew test --no-daemon || exit 1
            else
              echo "No tests found for $service, skipping..." | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
            fi
            cd ..
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log Step 2
        run: |
          echo "Step 2: Set up Docker Buildx" | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt

      - name: Build and Start Docker Compose Services
        run: |
          echo "Step 7: Build and Start Docker Compose Services" | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
          sudo apt-get update | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
          sudo apt-get install -y docker-compose | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
          docker-compose -f compose-prod.yaml up --build -d | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt

      - name: Tear Down Docker Compose
        run: |
          echo "Tearing down Docker Compose services..." | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
          docker-compose -f compose-prod.yaml down | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt

      - name: Output logs for all services
        run: |
          echo "Service logs:" | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt
          docker-compose logs | tee -a $GITHUB_WORKSPACE/ci_cd_log.txt

      - name: Upload log file
        uses: actions/upload-artifact@v2
        with:
          name: build-logs
          path: $GITHUB_WORKSPACE/ci_cd_log.txt
