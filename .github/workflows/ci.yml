name: CI for Production Microservices

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build and Start Docker Compose (compose-prod.yaml)
      - name: Build and Start Docker Compose Services
        run: |
          echo "Building and starting Docker Compose services..."
          sudo apt-get update
          sudo apt-get install -y docker-compose
          docker-compose -f compose-prod.yaml up --build -d
        # `--build` ensures the images are rebuilt.
        # `-d` runs the containers in the background.

      # Step 4: Health check for service readiness
      - name: Wait for services to become healthy
        run: |
          echo "Waiting for services to be healthy..."
          for i in {1..15}; do
            docker-compose -f compose-prod.yaml ps
            if [ "$(docker-compose -f compose-prod.yaml ps | grep 'Up (healthy)' | wc -l)" -eq 7 ]; then
              echo "All services are up and healthy!"
              break
            fi
            echo "Services are not ready yet... waiting 10 seconds"
            sleep 10
          done
          if [ "$(docker-compose -f compose-prod.yaml ps | grep 'Up (healthy)' | wc -l)" -ne 7 ]; then
            echo "Not all services became healthy in time." >&2
            exit 1
          fi
        # Adjust the `6` based on the number of services you expect to be healthy.

      # Step 5: Run Tests for Each Service (if tests exist)
      - name: Run tests for each service
        run: |
          services=("auth-prod" "feedback-prod" "gtfs" "orderbus-prod" "routes-prod")
          for service in "${services[@]}"; do
            echo "Running tests for $service..."
            if docker-compose exec "$service" ./mvnw test; then
              echo "Tests for $service succeeded!"
            else
              echo "No tests found or tests failed for $service"
            fi
          done

      # Step 6: Tear down Docker Compose after tests
      - name: Tear Down Docker Compose
        run: |
          echo "Tearing down Docker Compose services..."
          docker-compose -f compose-prod.yaml down

      # Step 7: Output logs for services
      - name: Output logs for all services
        run: |
          echo "Service logs:"
          docker-compose logs
