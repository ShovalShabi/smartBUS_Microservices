# Docker Compose Configuration for PostgreSQL, Redis, and Microservices (Production Environment)

services:
  # PostgresSQL container (production)
  PostgresContainer:
    container_name: smartbus-prod-PostgresContainer
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12683579
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-prod:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - smartbus-net

  # Auth service (prod)
  auth-prod:
    container_name: smartbus-prod-Auth
    build:
      context: ./Auth
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgresContainer:5432/AuthDBProd
    ports:
      - "10000:10000"
    depends_on:
      - PostgresContainer
    networks:
      - smartbus-net

  # Feedback service (prod)
  feedback-prod:
    container_name: smartbus-prod-Feedback
    build:
      context: ./Feedback
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgresContainer:5432/FeedbackDBProd
    ports:
      - "10050:10050"
    depends_on:
      - PostgresContainer
    networks:
      - smartbus-net

  # GTFS service (prod)
  gtfs:
    container_name: smartbus-prod-GTFS
    build:
      context: ./GTFS
      dockerfile: Dockerfile
    volumes:
      - ./GTFS/prod/public:/app/GtfsScript/public  # Mounting public folder for GTFS data
      - type: bind
        source: ./GTFS/prod/config.yaml
        target: /app/GtfsScript/config/config.yaml
    depends_on:
      - PostgresContainer
    environment:
      - POSTGRES_URL=jdbc:postgresql://PostgresContainer:5432/GTFSProd
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12683579
    ports:
      - "9000:9000"
    networks:
      - smartbus-net

  # OrderBus service (prod)
  orderbus-prod:
    container_name: smartbus-prod-OrderBus
    build:
      context: ./OrderBus
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgresContainer:5432/GTFSProd
    ports:
      - "10093:10093"
    depends_on:
      - PostgresContainer
      - gtfs
      - routes-prod
      - RedisContainer
    networks:
      - smartbus-net

  # Routes service (prod)
  routes-prod:
    container_name: smartbus-prod-Routes
    build:
      context: ./Routes
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - "10094:10094"
    networks:
      - smartbus-net

  # Redis container (production)
  RedisContainer:
    container_name: smartbus-prod-RedisContainer
    image: redis:7-alpine
    ports:
      - "6379:6379" # Redis default port
    volumes:
      - redis-data-prod:/data
    networks:
      - smartbus-net

  # Nginx service for production
  nginx:
    container_name: smartbus-prod-nginx
    image: nginx:latest
    ports:
      - "8080:8080" # Exposing port 8080
    volumes:
      - ./nginx/nginx-prod.conf:/etc/nginx/nginx.conf:ro  # Mount prod configuration as read-only
    depends_on:
      - auth-prod
      - feedback-prod
      - orderbus-prod
      - routes-prod
    networks:
      - smartbus-net

# Define the network
networks:
  smartbus-net:
    driver: bridge
    name: smartbus-net

volumes:
  postgres-data-prod:
  redis-data-prod:
