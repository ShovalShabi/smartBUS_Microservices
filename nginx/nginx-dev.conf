worker_processes 1;  # Number of worker processes to spawn. Adjust based on CPU cores to optimize performance.

events {
    worker_connections 1024;  # Max number of simultaneous connections per worker. Increase for high traffic.
}

http {
    include       mime.types;  # Load MIME type mappings for correct Content-Type headers.
    default_type  application/octet-stream;  # Default MIME type for unknown file types.

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;  # If 'Upgrade' header is present, enable WebSocket connection.
        ''      close;    # Otherwise, close the connection.
    }

    # Upstream configuration for each backend service (dev environment)
    upstream auth-backend {
        server auth-dev:3804;  # Define the Auth service backend, listening on port 3804.
    }

    upstream feedback-backend {
        server feedback-dev:5003;  # Define the Feedback service backend, listening on port 5003.
    }

    upstream orderbus-backend {
        server orderbus-dev:6936;  # Define the OrderBus service backend, listening on port 6936.
    }

    upstream routes-backend {
        server routes-dev:6924;  # Define the Routes service backend, listening on port 6924.
    }

    server {
        listen 8080;  # Listen on port 8080 for HTTP/HTTPS traffic.
        server_name localhost;  # Server name, can be changed to a domain name if needed.
        http2 on;  # Enable HTTP/2 for faster connection handling.

        # Proxy settings for backend services
        proxy_http_version 1.1;  # Use HTTP/1.1 to maintain persistent connections.
        proxy_set_header Upgrade $http_upgrade;  # Ensure WebSocket connections are supported.
        proxy_set_header Connection $connection_upgrade;  # Maintain WebSocket or close connection.
        proxy_cache_bypass $http_upgrade;  # Disable caching for WebSocket connections.

        # Enable DNS resolution for upstream dynamic service names
        resolver 8.8.8.8 8.8.4.4 valid=300s;  # Google DNS servers, with 5-minute caching for resolved names.
        resolver_timeout 10s;  # Timeout after 10 seconds if DNS resolution fails.

        # Location block for Auth Service
        location /auth-service/ {
            rewrite ^/auth-service/(.*)$ /$1 break;  # Strip /auth-service prefix before proxying to backend.
            proxy_pass http://auth-backend;  # Forward traffic to the Auth backend.
        }

        # Location block for Feedback Service
        location /feedback-service/ {
            rewrite ^/feedback-service/(.*)$ /$1 break;  # Strip /feedback-service prefix before proxying to backend.
            proxy_pass http://feedback-backend;  # Forward traffic to the Feedback backend.
        }

        # Location block for OrderBus Service
        location /orderbus-service/ {
            rewrite ^/orderbus-service/(.*)$ /$1 break;  # Strip /orderbus-service prefix before proxying to backend.
            proxy_pass http://orderbus-backend;  # Forward traffic to the OrderBus backend.
        }

        # Location block for Routes Service
        location /routes-service/ {
            rewrite ^/routes-service/(.*)$ /$1 break;  # Strip /routes-service prefix before proxying to backend.
            proxy_pass http://routes-backend;  # Forward traffic to the Routes backend.
        }

        # WebSocket endpoint for OrderBus notifications
        location /notification-service {
            proxy_pass http://orderbus-backend;  # Forward WebSocket requests to OrderBus backend.
            proxy_set_header Upgrade $http_upgrade;  # Enable WebSocket upgrades.
            proxy_set_header Connection "upgrade";  # Maintain upgraded connection.
            proxy_set_header Host $host;  # Set Host header to match client request.
            proxy_set_header X-Real-IP $remote_addr;  # Pass real client IP to the backend.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Pass original client IPs in chain.
            proxy_set_header X-Forwarded-Proto $scheme;  # Pass original protocol (http/https).
            proxy_http_version 1.1;  # Maintain WebSocket connection via HTTP/1.1.
            proxy_cache_bypass $http_upgrade;  # Prevent caching of WebSocket traffic.

            # WebSocket-specific settings to prevent timeouts
            proxy_read_timeout 3600s;  # Allow WebSocket connections to stay open for 1 hour
            proxy_send_timeout 3600s;  # Prevent WebSocket connection from closing on inactivity
            keepalive_timeout 3600s;   # Increase keep-alive timeout to match WebSocket needs
            proxy_connect_timeout 10s; # Timeout if the WebSocket server is unresponsive
            send_timeout 3600s;        # Timeout for data to be sent to the backend

            # Buffers for WebSocket messages
            client_body_buffer_size 10M;  # Adjust if large WebSocket messages are being sent

            # Prevent redirect issues for WebSocket traffic
            proxy_redirect off;  # Disable automatic redirection for WebSocket connections.
        }
    }
}
