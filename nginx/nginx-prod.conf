worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Define upstream for services (prod environment)
    upstream auth-backend {
        server auth-prod:10000;
    }

    upstream feedback-backend {
        server feedback-prod:10050;
    }

    upstream orderbus-backend {
        server orderbus-prod:10093;
    }

    upstream routes-backend {
        server routes-prod:10094;
    }

    server {
        listen 8080;  # Listen on all network interfaces
        server_name localhost;
        http2 on;

        # Proxy settings for backend services
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_cache_bypass $http_upgrade;

        # Enable DNS resolution for dynamic proxies
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 10s;

        # Route to Auth Service (Prod) with /auth-service prefix
        location /auth-service/ {
            rewrite ^/auth-service/(.*)$ /$1 break;  # Strip prefix and pass to backend
            proxy_pass http://auth-backend;
        }

        # Route to Feedback Service (Prod) with /feedback-service prefix
        location /feedback-service/ {
            rewrite ^/feedback-service/(.*)$ /$1 break;
            proxy_pass http://feedback-backend;
        }

        # Route to OrderBus Service (Prod) with /orderbus-service prefix
        location /orderbus-service/ {
            rewrite ^/orderbus-service/(.*)$ /$1 break;
            proxy_pass http://orderbus-backend;
        }

        # Route to Routes Service (Prod) with /routes-service prefix
        location /routes-service/ {
            rewrite ^/routes-service/(.*)$ /$1 break;
            proxy_pass http://routes-backend;
        }

        # WebSocket endpoint for OrderBus Service
        location /ws/ {
            proxy_pass ws://orderbus-backend;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
