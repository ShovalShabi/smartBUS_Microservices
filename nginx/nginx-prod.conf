worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # Define upstream for Auth service (prod environment)
    upstream auth_backend {
        server auth-prod:10000;
    }

    upstream feedback_backend {
        server feedback-prod:10050;
    }

    upstream orderbus_backend {
        server orderbus-prod:10093;
    }

    upstream routes_backend {
        server routes-prod:10094;
    }

    server {
        listen 8080 http2;
        server_name localhost;

        # Route to Auth Service (Prod)
        location /auth/ {
            proxy_pass http://auth_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Route to Feedback Service (Prod)
        location /feedback/ {
            proxy_pass http://feedback_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Route to OrderBus Service (Prod)
        location /orderbus/ {
            proxy_pass http://orderbus_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Route to Routes Service (Prod)
        location /routes/ {
            proxy_pass http://routes_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
