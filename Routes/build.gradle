// Apply plugins
plugins {
    id 'java' // Apply Java plugin for Java project
    id 'org.springframework.boot' version '3.2.5' // Apply Spring Boot plugin with version 3.2.5
    id 'io.spring.dependency-management' version '1.1.4' // Apply Spring Dependency Management plugin with version 1.1.4
}

// Define project details
group = 'club.smartbus' // Group ID for the project
version = '0.0.1-SNAPSHOT' // Version of the project

// Set Java source compatibility
java {
    sourceCompatibility = '17' // Java version compatibility
}

ext {
    set('springCloudVersion', "2023.0.0")
}

// Configure build configurations
configurations {
    compileOnly {
        extendsFrom annotationProcessor // Add annotation processor to compileOnly configuration
    }
}

// Define repositories
repositories {
    mavenCentral() // Use Maven Central repository for dependencies
}

// Define project dependencies
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Spring Boot Starter Actuator for production-ready features
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Spring Boot Starter WebFlux for reactive web applications
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring Boot Starter Web for building web applications and applying netty as web server
    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'

    // Swagger-UI
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'

    // Lombok for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok'

    // Development-only dependency for Docker Compose support
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Lombok annotation processor for compile time
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Boot Starter Test for testing support
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Additional dependencies for testing
    testImplementation 'io.projectreactor:reactor-test'

    // Google Maps Polyline decoding library
    implementation 'com.google.maps:google-maps-services:2.2.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

// Configure test task to use JUnit Platform
tasks.named('test') {
    useJUnitPlatform()
}
